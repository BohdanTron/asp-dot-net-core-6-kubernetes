# Docker
# Build and push an image to Azure Container Registry
# https://docs.microsoft.com/azure/devops/pipelines/languages/docker

trigger:
- deployment-automation
resources:
- repo: self

variables:
  # Container registry service connection established during pipeline creation
  dockerRegistryServiceConnection: '29850a72-a878-4975-baa4-4aad2de7fb8a'
  imageRepository: 'frontend'
  containerRegistry: 'psgloboticket.azurecr.io'
  dockerfilePath: '$(Build.SourcesDirectory)/frontend/Dockerfile'
  tag: '$(Build.BuildId)'

  # Agent VM image name
  vmImageName: 'ubuntu-latest'

stages:
- stage: Build
  displayName: Build and push stage
  jobs:
  - job: Build
    displayName: Build
    pool:
      vmImage: $(vmImageName)
    steps:
    - task: Docker@2
      displayName: Build and push an image to container registry
      inputs:
        command: buildAndPush
        repository: $(imageRepository)
        dockerfile: $(dockerfilePath)
        containerRegistry: $(dockerRegistryServiceConnection)
        tags: |
          $(tag)
    
    - task: replacetokens@5
      inputs:
        targetFiles: '$(Pipeline.Workspace)/demos/remote-k8s/deployment-automation/frontend.yaml'
        encoding: 'auto'
        tokenPattern: 'default'
        writeBOM: true
        actionOnMissing: 'warn'
        keepToken: false
        actionOnNoFiles: 'continue'
        enableTransforms: false
        enableRecursion: false
        useLegacyPattern: false
        enableTelemetry: true
    - task: PublishPipelineArtifact@1
      inputs:
        targetPath: '$(Pipeline.Workspace)/demos/remote-k8s/deployment-automation/frontend.yaml'
        artifact: 'deploymentfiles'
        publishLocation: 'pipeline'
  
  - job: Deploy
    displayName: Deploy
    pool:
      vmImage: $(vmImageName)
    steps:
      - task: DownloadBuildArtifacts@1
        inputs:
          buildType: 'current'
          downloadType: 'single'
          artifactName: 'deploymentfiles'
          downloadPath: '$(System.ArtifactsDirectory)'
      - task: KubernetesManifest@0
        inputs:
          action: 'deploy'
          namespace: 'globoticket'
          manifests: 'deploymentfiles/frontend.yaml'